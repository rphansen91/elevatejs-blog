{"version":3,"sources":["webpack:///./src/ui/Social/loadScript.js","webpack:///./src/ui/Social/TwitterFeed.js","webpack:///./src/pages/blog.js"],"names":["identity","v","LoadScript","componentDidMount","this","src","onScriptLoaded","onScriptError","loadedScripts","Promise","document","script","res","loadScript","render","children","Children","username","className","href","Blog","posts","data","title","path","mountains","content","sidebar","p","pt","variant","color","align","container","spacing","acc","item","lg","md","xs","style","marginBottom","key","i","aria-label","to","a","imageSize","image","width","actions","query"],"mappings":"uPAEA,IAAMA,EAAW,SAAAC,GAAC,UAELC,EAAb,Y,QAAA,kD,EAAA,G,EAAA,G,6EAAA,6CACIC,WAAsB,IAAD,EACgDC,KADhD,MACTC,EADS,yBACJC,OADI,4BACqBC,OADrB,WAgBV,YACX,OAAIC,EAAJ,GAA+BA,EAAP,IACxBA,KAAqB,IAAIC,QAAQ,cAC7B,uBAAWC,SAA0B,CACjC,IAAMC,EAASD,uBAAf,UACAC,QACAA,WACAA,YACAD,kCAEAE,MAGDJ,EAAP,KA1BIK,sBAJR,SASIC,WAAW,IACCC,EAAaX,KADf,eAEN,OAAOY,gBAAP,IAXR,gBAgBMR,EAAN,I,kCCpBA,qCAGe,oBAAGS,EAAH,kBACX,uBAAYZ,IAAI,2CACZ,uBAAGa,UAAH,mBAAgCC,KAAI,uBAAyBF,O,2SC+B/DG,GAnBS,sBAAe,IACtBC,EADqB,EAAXC,KACF,4BAAiC,wCAC/C,OACE,2BACE,uBAAKC,MAAL,mBAAgCC,KAAM,WACtC,uBACEC,WADF,EAEEC,QAAS,qBAAML,MAAOA,IACtBM,QACE,uBAAKT,UAAL,kBAAiCU,EAAG,GAClC,uBAAaX,SAAS,cACtB,uBAAKY,GAAI,SAQR,SAAC,GAAe,IAAbR,EAAY,EAAZA,MACd,OACE,oCACE,sBADF,MAEE,uBAAKQ,GAAI,GACP,uBAAYC,QAAZ,KAAyBC,MAAzB,cAA6CC,MAAM,UAHvD,SAOE,uBAAKJ,EAAG,GACN,uBAAMK,WAAN,EAAgBC,QAAS,GACtB,IAAQb,EAAM,cAAd,eAA6C,gBAAgB,IAAD,MAwC3D,OAvCAc,OACE,uBACEC,MADF,EAEEC,GAFF,EAGEC,GAHF,EAIEC,GAJF,GAKEC,MAAO,CAAEC,aAAc,SACvBC,IAAKC,GAEL,0BACEC,aADF,YAEE1B,UAFF,UAGE2B,GAAE,GAAKC,EAAEtB,MAET,uBACEuB,UADF,IAEEC,MAAK,UAAEF,EAAF,yCAAEA,EAAF,8CAAEA,EAAF,0BAAEA,EAFT,IAGEvB,MAAOuB,EAHT,MAIEN,MAAO,CAAES,MAAO,QAChBC,QACE,2BACE,uBACEnB,MADF,YAEEa,aAFF,YAGEd,QAAQ,aAJZ,mBAmBHK,GAjDf,MAqDE,sBAtDJ,SA2DWgB,EAAN","file":"component---src-pages-blog-js-0598abc149eb9d326a48.js","sourcesContent":["import React, { Component, Children } from 'react';\n\nconst identity = v => v\n\nexport class LoadScript extends Component {\n    componentDidMount () {\n        const { src, onScriptLoaded=identity, onScriptError=identity } = this.props\n        \n        loadScript(src)\n        .then(onScriptLoaded)\n        .catch(onScriptError)\n    }\n\n    render () {\n        const { children } = this.props;\n        return Children.only(children);\n    }\n}\n\n\nconst loadedScripts = {}\nexport default function loadScript (src) {\n    if (loadedScripts[src]) return loadedScripts[src]\n    loadedScripts[src] = new Promise(function (res, rej) {\n        if (typeof document !== 'undefined') {\n            const script = document.createElement('script')\n            script.src = src\n            script.onload = res\n            script.onerror = rej\n            document.body.appendChild(script)\n        } else {\n            res()\n        }\n    })\n    return loadedScripts[src]\n}","import React from \"react\"\nimport { LoadScript } from \"./loadScript\";\n\nexport default ({ username }) => (\n    <LoadScript src=\"https://platform.twitter.com/widgets.js\">\n        <a className=\"twitter-timeline\" href={`https://twitter.com/${username}`}></a>\n    </LoadScript>\n)","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport MainLayout from \"../components/layout\"\nimport SEO from \"../ui/SEO\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Box from \"@material-ui/core/Box\"\nimport Grid from \"@material-ui/core/Grid\"\nimport TwitterFeed from \"../ui/Social/TwitterFeed\"\nimport { TopBannerDisplayAd, BottomBannerDisplayAd } from \"../ads/slots\"\nimport Article from \"../ui/Article\"\nimport ProjectsSidebar from \"../ui/Article/ProjectsSidebar\"\nimport Layout from \"../ui/Layout\"\nimport orderBy from \"lodash/orderBy\"\n\nexport default ({ data }) => {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => node.frontmatter)\n  return (\n    <MainLayout>\n      <SEO title={\"ElevateJS | Blog\"} path={\"/blog/\"} />\n      <Layout\n        mountains\n        content={<Blog posts={posts} />}\n        sidebar={\n          <Box className=\"article-sidebar\" p={2}>\n            <TwitterFeed username=\"elevatejs\" />\n            <Box pt={2} />\n          </Box>\n        }\n      ></Layout>\n    </MainLayout>\n  )\n}\n\nconst Blog = ({ posts }) => {\n  return (\n    <>\n      <TopBannerDisplayAd />\n      <Box pt={3}>\n        <Typography variant=\"h1\" color=\"textPrimary\" align=\"center\">\n          Blog\n        </Typography>\n      </Box>\n      <Box p={3}>\n        <Grid container spacing={3}>\n          {orderBy(posts, \"publishedAt\", \"desc\").reduce((acc, a, i) => {\n            acc.push(\n              <Grid\n                item\n                lg={3}\n                md={4}\n                xs={12}\n                style={{ marginBottom: \"0.3em\" }}\n                key={i}\n              >\n                <Link\n                  aria-label=\"Read More\"\n                  className=\"d-block\"\n                  to={`${a.path}`}\n                >\n                  <Article\n                    imageSize={160}\n                    image={a.urlToImage?.childImageSharp?.fluid?.src}\n                    title={a.title}\n                    style={{ width: \"100%\" }}\n                    actions={\n                      <CardActions>\n                        <Button\n                          color=\"secondary\"\n                          aria-label=\"Read More\"\n                          variant=\"contained\"\n                        >\n                          Read More\n                        </Button>\n                      </CardActions>\n                    }\n                  />\n                </Link>\n              </Grid>\n              // <div className=\"col-lg-4 col-md-6 mb-4\" key={i + \"ad\"}>\n              //   <NewsDisplayAd\n              //     style={{ maxWidth: \"100%\", margin: \"auto\", width: 350 }}\n              //   />\n              // </div>\n            )\n            return acc\n          }, [])}\n        </Grid>\n      </Box>\n      <BottomBannerDisplayAd />\n    </>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"post\" } } }\n      sort: { order: DESC, fields: [frontmatter___publishedAt] }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          frontmatter {\n            publishedAt(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            author\n            urlToImage {\n              childImageSharp {\n                fluid(maxWidth: 2048, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            sourceName\n            path\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}